logstashConfig:
  logstash.yml: |
    http.host: "0.0.0.0"
    config.reload.automatic: true
    xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch-master.elk.svc.cluster.local:9200"]

logstashPipeline:
  logstash.conf: |
    input {
      beats {
    port => 5044
      }
    }

    filter {
      if [input][type] == "filestream" {
        # grok { match => { "message" => "%{COMBINEDAPACHELOG}" } }
        grok{
          match => { "message" => "%{IPORHOST:remote_addr} - %{USER:remote_user} \[%{HTTPDATE:time_local}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:status} (?:%{NUMBER:body_bytes_sent}|-) \"%{GREEDYDATA:referrer}\" \"%{GREEDYDATA:http_user_agent}\" \"%{DATA:forwarder}\"" }
          }
          # mutate{
          # 	remove_field => [ "message" ]
          # }
        # mutate {
        #   replace => { "message" => "replace_message" }
        #   split => { "message" => "_" }
        #   add_field => { "shortMessage" => "%{[message][0]}" }
        #   convert => {
        #     "fieldname" => "integer"
        #     "booleanfield" => "boolean"
        #   }
        # }
      }
    }

    output {
      if [input][type] == "filestream" {
        stdout { codec => rubydebug }
      }
      else {
        elasticsearch {
          hosts => ["http://elasticsearch-master.elk.svc.cluster.local:9200"]
          index => "%{[@metadata][beat]}-%{[@metadata][version]}"
        }
      }
    }
